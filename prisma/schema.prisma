datasource db {
    provider = "sqlite"
    url      = "file:./data.db"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id              String    @id @default(cuid())
    name            String?
    email           String?   @unique
    emailVerified   DateTime?
    image           String?
    accounts        Account[]
    sessions        Session[]
    authoredRecipes Recipe[]  @relation("Recipe_author")
    editedRecipes   Recipe?   @relation("Recipe_editor")

}

model Recipe {
    id        String    @id @default(cuid())
    title     String    @default("")
    content   String    @default("")
    createdAt DateTime? @default(now())
    updatedAt DateTime? @default(now())
    status    String?   @default("draft")
    author    User?     @relation("Recipe_author", fields: [authorId], references: [id])
    authorId  String?   @map("author")
    editor    User?     @relation("Recipe_editor", fields: [editorId], references: [id])
    editorId  String?   @unique @map("editor")
    tags      Tag[]     @relation("Recipe_tags")

    @@index([authorId])
}

model Tag {
    id       String   @id @default(cuid())
    name     String   @default("")
    recipes  Recipe[] @relation("Recipe_tags")
    parent   Tag?     @relation("Tag_parent", fields: [parentId], references: [id])
    parentId String?  @map("parent")
    children Tag[]    @relation("Tag_parent")

    @@index([parentId])
}

model Account {
    id                 String  @id @default(cuid())
    userId             String
    type               String
    provider           String
    providerAccountId  String
    refresh_token      String?
    access_token       String?
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?
    session_state      String?
    oauth_token_secret String?
    oauth_token        String?
    user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
